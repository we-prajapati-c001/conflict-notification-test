name: Check for Merge Conflicts

on:
  pull_request:
    types: [synchronize, opened, reopened]

jobs:
  check_conflicts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required for git diff

      - name: Configure Git user
        run: |
          git config user.email "github-actions@github.com"
          git config user.name "GitHub Actions"

      - name: Check for merge conflicts
        id: conflicts
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}
          if git merge-base --is-ancestor origin/${{ github.event.pull_request.base.ref }} HEAD; then
            echo "No merge conflicts."
            echo "::set-output name=has_conflicts::false"
          else
            git merge origin/${{ github.event.pull_request.base.ref }}
            if [[ $? -ne 0 ]]; then
              echo "Merge conflicts detected."
              echo "::set-output name=has_conflicts::true"
            else
              echo "No merge conflicts."
              echo "::set-output name=has_conflicts::false"
            fi
          fi

      - name: Comment if conflicts exist
        if: steps.conflicts.outputs.has_conflicts == 'true'
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            @${{ github.event.pull_request.user.login }}, this PR has merge conflicts. Please resolve them.
